{"ast":null,"code":"var _jsxFileName = \"C:\\\\SharpenerProjects\\\\usememo-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport DemoList from \"./components/Demo/DemoList\";\nimport Button from \"./components/UI/Button/Button\";\nimport Button2 from \"./components/UI/Button/Button2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [listTitle, setListTitle] = useState(\"My List\");\n  const [order, setOrder] = useState(\"\");\n  const [buttonName, setButtonName] = useState(\"Change To Ascending Order\");\n  const [flag, setFlag] = useState(0);\n  const changeTitleHandler = useCallback(() => {\n    setListTitle(\"New Title\");\n  }, []);\n  const changeTitleHandlerTwo = useCallback(() => {\n    if (flag === 0) {\n      setFlag(1);\n      setOrder(\"asc\");\n      setListTitle(\"Ascending Order\");\n      setButtonName(\"Change To Descending Order\");\n    } else {\n      setFlag(0);\n      setOrder(\"desc\");\n      setListTitle(\"Descending Order\");\n      setButtonName(\"Change To Ascending Order\");\n    }\n  }, [flag]);\n  const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(DemoList, {\n      order: order,\n      title: listTitle,\n      items: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: changeTitleHandler,\n      children: \"Change List Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button2, {\n      onClick: changeTitleHandlerTwo,\n      children: buttonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BBOb1d7PYNbCBMMZpcpZF/vZQlQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","DemoList","Button","Button2","jsxDEV","_jsxDEV","App","_s","listTitle","setListTitle","order","setOrder","buttonName","setButtonName","flag","setFlag","changeTitleHandler","changeTitleHandlerTwo","listItems","className","children","title","items","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/SharpenerProjects/usememo-task/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\n\nimport \"./App.css\";\nimport DemoList from \"./components/Demo/DemoList\";\nimport Button from \"./components/UI/Button/Button\";\nimport Button2 from \"./components/UI/Button/Button2\";\n\nfunction App() {\n  const [listTitle, setListTitle] = useState(\"My List\");\n  const [order, setOrder] = useState(\"\");\n  const [buttonName, setButtonName] = useState(\"Change To Ascending Order\");\n  const [flag, setFlag] = useState(0);\n\n  const changeTitleHandler = useCallback(() => {\n    setListTitle(\"New Title\");\n  }, []);\n\n  const changeTitleHandlerTwo = useCallback(() => {\n    if (flag === 0) {\n      setFlag(1);\n      setOrder(\"asc\");\n      setListTitle(\"Ascending Order\");\n      setButtonName(\"Change To Descending Order\");\n    } else {\n      setFlag(0);\n      setOrder(\"desc\");\n      setListTitle(\"Descending Order\");\n      setButtonName(\"Change To Ascending Order\");\n    }\n  }, [flag]);\n\n  const listItems = useMemo(() => [5, 3, 1, 10, 9], []);\n\n  return (\n    <div className=\"app\">\n      <DemoList order={order} title={listTitle} items={listItems} />\n      <Button onClick={changeTitleHandler}>Change List Title</Button>\n      <Button2 onClick={changeTitleHandlerTwo}>{buttonName}</Button2>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAE7D,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAOC,OAAO,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,2BAA2B,CAAC;EACzE,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMkB,kBAAkB,GAAGjB,WAAW,CAAC,MAAM;IAC3CU,YAAY,CAAC,WAAW,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,qBAAqB,GAAGlB,WAAW,CAAC,MAAM;IAC9C,IAAIe,IAAI,KAAK,CAAC,EAAE;MACdC,OAAO,CAAC,CAAC,CAAC;MACVJ,QAAQ,CAAC,KAAK,CAAC;MACfF,YAAY,CAAC,iBAAiB,CAAC;MAC/BI,aAAa,CAAC,4BAA4B,CAAC;IAC7C,CAAC,MAAM;MACLE,OAAO,CAAC,CAAC,CAAC;MACVJ,QAAQ,CAAC,MAAM,CAAC;MAChBF,YAAY,CAAC,kBAAkB,CAAC;MAChCI,aAAa,CAAC,2BAA2B,CAAC;IAC5C;EACF,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEV,MAAMI,SAAS,GAAGlB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EAErD,oBACEK,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA,CAACJ,QAAQ;MAACS,KAAK,EAAEA,KAAM;MAACW,KAAK,EAAEb,SAAU;MAACc,KAAK,EAAEJ;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9DrB,OAAA,CAACH,MAAM;MAACyB,OAAO,EAAEX,kBAAmB;MAAAI,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DrB,OAAA,CAACF,OAAO;MAACwB,OAAO,EAAEV,qBAAsB;MAAAG,QAAA,EAAER;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACnB,EAAA,CAjCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}